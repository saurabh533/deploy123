# -*- coding: utf-8 -*-
"""app3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PeGkAE-6Y_2xt9hGOoePMAaORLdQom2m
"""

import streamlit as st
import numpy as np
import pandas as pd
from sklearn.datasets import load_boston
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Load the Boston Housing dataset
boston = load_boston()

# Convert the data into a pandas DataFrame
df = pd.DataFrame(boston.data, columns=boston.feature_names)
df['PRICE'] = boston.target

# Create a sidebar with options for selecting the features to use in the model
st.sidebar.markdown("# Select Features")
selected_features = st.sidebar.multiselect(
    "Which features do you want to use?",
    boston.feature_names,
    default=["RM", "LSTAT"]
)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(
    df[selected_features], df['PRICE'], test_size=0.2, random_state=42
)

# Train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Create a form for entering user input
st.title("Boston Housing Prices Prediction ka house prediction")
st.write("Enter the values of the selected features to make a prediction:  values dalo please")
feature_values = {}
for feature_name in selected_features:
    value = st.number_input(feature_name, step=0.1)
    feature_values[feature_name] = value

# Make a prediction based on the user input
input_df = pd.DataFrame([feature_values])
prediction = model.predict(input_df[selected_features])[0]

# Display the prediction on the web page
st.write("Prediction:  yeh raha apka price  ", prediction)

# Evaluate the model performance on the test set
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

# Display the model performance on the web page
st.write("Mean Squared Error on Test Set: ", mse)
st.write("Root Mean Squared Error on Test Set: ", rmse)
